const axios = require("./node_modules/axios");

const http = axios.create({
	baseURL: "https://api.starton.io/v2",
	headers: {
		"x-api-key": "yLcAmpNs3MHZaQ9Dfydp5VI24uI851jn",
	},
});

http.post("/smart-contract/from-bytecode", {
	network: "ethereum-ropsten",
	name: "Dyor Bet",
	description: "Unlimited crypto betting!",
	params: [],
	abi: [
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_id",
					"type": "uint256"
				}
			],
			"name": "accept",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_id",
					"type": "uint256"
				}
			],
			"name": "cancel",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_id",
					"type": "uint256"
				}
			],
			"name": "claim",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint32",
					"name": "_startAt",
					"type": "uint32"
				},
				{
					"internalType": "uint32",
					"name": "_endAt",
					"type": "uint32"
				},
				{
					"internalType": "string",
					"name": "_symbol",
					"type": "string"
				},
				{
					"internalType": "uint256",
					"name": "_prediction",
					"type": "uint256"
				}
			],
			"name": "launch",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_id",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_endPrice",
					"type": "uint256"
				}
			],
			"name": "setEndPrice",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "bets",
			"outputs": [
				{
					"internalType": "address",
					"name": "creator",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "challenger",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				},
				{
					"internalType": "uint32",
					"name": "startAt",
					"type": "uint32"
				},
				{
					"internalType": "uint32",
					"name": "endAt",
					"type": "uint32"
				},
				{
					"internalType": "bool",
					"name": "claimed",
					"type": "bool"
				},
				{
					"internalType": "string",
					"name": "symbol",
					"type": "string"
				},
				{
					"internalType": "uint256",
					"name": "prediction",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "endPrice",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "count",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	bytecode: "0x608060405234801561001057600080fd5b50610c67806100206000396000f3fe6080604052600436106100705760003560e01c806322af00fa1161004e57806322af00fa146100c6578063379607f5146100fb57806340e58ee51461010e578063c4c445291461012157600080fd5b806306661abd1461007557806319b05f491461009e5780631da35a58146100b3575b600080fd5b34801561008157600080fd5b5061008b60015481565b6040519081526020015b60405180910390f35b6100b16100ac366004610972565b610141565b005b6100b16100c13660046109ba565b610220565b3480156100d257600080fd5b506100e66100e1366004610972565b610350565b60405161009599989796959493929190610a94565b6100b1610109366004610972565b610444565b6100b161011c366004610972565b61062e565b34801561012d57600080fd5b506100b161013c366004610b47565b61072d565b60008181526002602081905260409091209081015434101561016257600080fd5b600381015463ffffffff164210156101af5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b60448201526064015b60405180910390fd5b6003810154640100000000900463ffffffff164211156101e15760405162461bcd60e51b81526004016101a690610b69565b80546001600160a01b0316330361020a5760405162461bcd60e51b81526004016101a690610b69565b60010180546001600160a01b0319163317905550565b60018060008282546102329190610b9e565b90915550506040805161012081018252338152600060208083018281523484860190815263ffffffff8a8116606087019081528a82166080880190815260a0880187815260c089018c815260e08a018c90526101008a01899052600180548a526002808a529b9099208a5181546001600160a01b03199081166001600160a01b0392831617835598519a820180549099169a1699909917909655935198870198909855516003860180549851935191831667ffffffffffffffff199099169890981764010000000093909216929092021760ff60401b1916600160401b91151591909102179094559251805192939192610332926004850192019061089c565b5060e082015160058201556101009091015160069091015550505050565b6002602081905260009182526040909120805460018201549282015460038301546004840180546001600160a01b039485169690941694929363ffffffff8084169464010000000085049091169360ff600160401b909104169290916103b590610bb6565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190610bb6565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050908060050154908060060154905089565b60008181526002602052604090206003810154640100000000900463ffffffff16421161049f5760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b60448201526064016101a6565b80600601546000036104e75760405162461bcd60e51b8152602060048201526011602482015270115b99081c1c9a58d9481b9bdd081cd95d607a1b60448201526064016101a6565b6003810154600160401b900460ff161561052d5760405162461bcd60e51b815260206004820152600760248201526618db185a5b595960ca1b60448201526064016101a6565b80546001600160a01b0316330361059057806006015481600501541461058b5760405162461bcd60e51b8152602060048201526013602482015272596f75206c6f737420736f7272792062726f2160681b60448201526064016101a6565b6105dd565b80600601548160050154036105dd5760405162461bcd60e51b8152602060048201526013602482015272596f75206c6f737420736f7272792062726f2160681b60448201526064016101a6565b60038101805460ff60401b1916600160401b1790556002808201546000916106059190610bf0565b905061061381610bb8610c0f565b61061d9082610b9e565b90506106293382610802565b505050565b600081815260026020526040902080546001600160a01b031633146106835760405162461bcd60e51b815260206004820152600b60248201526a3737ba1031b932b0ba37b960a91b60448201526064016101a6565b600381015463ffffffff1642106106c65760405162461bcd60e51b81526020600482015260076024820152661cdd185c9d195960ca1b60448201526064016101a6565b6000828152600260208190526040822080546001600160a01b03199081168255600182018054909116905590810182905560038101805468ffffffffffffffffff19169055906107196004830182610920565b506000600582018190556006909101555050565b6000828152600260205260409020600381015463ffffffff164210156107835760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b60448201526064016101a6565b6003810154640100000000900463ffffffff164211156107b55760405162461bcd60e51b81526004016101a690610b69565b6000546001600160a01b031633036107fb5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064016101a6565b6006015550565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461084f576040519150601f19603f3d011682016040523d82523d6000602084013e610854565b606091505b50509050806106295760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101a6565b8280546108a890610bb6565b90600052602060002090601f0160209004810192826108ca5760008555610910565b82601f106108e357805160ff1916838001178555610910565b82800160010185558215610910579182015b828111156109105782518255916020019190600101906108f5565b5061091c92915061095d565b5090565b50805461092c90610bb6565b6000825580601f1061093c575050565b601f01602090049060005260206000209081019061095a919061095d565b50565b5b8082111561091c576000815560010161095e565b60006020828403121561098457600080fd5b5035919050565b803563ffffffff8116811461099f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156109d057600080fd5b6109d98561098b565b93506109e76020860161098b565b9250604085013567ffffffffffffffff80821115610a0457600080fd5b818701915087601f830112610a1857600080fd5b813581811115610a2a57610a2a6109a4565b604051601f8201601f19908116603f01168101908382118183101715610a5257610a526109a4565b816040528281528a6020848701011115610a6b57600080fd5b826020860160208301376000928101602001929092525095989497509495606001359450505050565b6001600160a01b038a8116825289166020808301919091526040820189905263ffffffff88811660608401528716608083015285151560a083015261012060c0830181905285519083018190526000918291905b81831015610b0757878301810151858401610140015291820191610ae8565b5080821115610b1b57600061014082860101525b60e08401959095525050610100810191909152610140601f909201601f19160101979650505050505050565b60008060408385031215610b5a57600080fd5b50508035926020909101359150565b602080825260059082015264195b99195960da1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bb157610bb1610b88565b500190565b600181811c90821680610bca57607f821691505b602082108103610bea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000816000190483118215151615610c0a57610c0a610b88565b500290565b600082610c2c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c08bca17a0c18dabb4b68a7878d028fb8e65ccf35af8529bba6b33e3020ceeb164736f6c634300080d0033",
	compilerVersion: "0.8.13+commit.abaa5c0e",
	signerWallet: "0x35105801fc0bE99FD1A2Dd661A7B3d91b5a58541"
}).then((response) => {
	console.log(response.data);
}).catch((error) => {
	console.log(error.response.data.message)
});
