const axios = require("./blockchain/node_modules/axios");

const http = axios.create({
	baseURL: "https://api.starton.io/v2",
	headers: {
		"x-api-key": "yLcAmpNs3MHZaQ9Dfydp5VI24uI851jn",
	},
});

http.post("/smart-contract/from-bytecode", {
	network: "polygon-mumbai",
	name: "Dyor Bet",
	description: "Unlimited crypto betting!",
	params: [],
	abi: [
		{
			inputs: [
				{
					internalType: "uint256",
					name: "_id",
					type: "uint256",
				},
			],
			name: "accept",
			outputs: [],
			stateMutability: "payable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "",
					type: "uint256",
				},
			],
			name: "bets",
			outputs: [
				{
					internalType: "address",
					name: "creator",
					type: "address",
				},
				{
					internalType: "address",
					name: "challenger",
					type: "address",
				},
				{
					internalType: "uint256",
					name: "amount",
					type: "uint256",
				},
				{
					internalType: "uint32",
					name: "startAt",
					type: "uint32",
				},
				{
					internalType: "uint32",
					name: "endAt",
					type: "uint32",
				},
				{
					internalType: "bool",
					name: "claimed",
					type: "bool",
				},
				{
					internalType: "string",
					name: "symbol",
					type: "string",
				},
				{
					internalType: "uint256",
					name: "prediction",
					type: "uint256",
				},
			],
			stateMutability: "view",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "_id",
					type: "uint256",
				},
			],
			name: "cancel",
			outputs: [],
			stateMutability: "payable",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "_id",
					type: "uint256",
				},
			],
			name: "claim",
			outputs: [],
			stateMutability: "payable",
			type: "function",
		},
		{
			inputs: [],
			name: "count",
			outputs: [
				{
					internalType: "uint256",
					name: "",
					type: "uint256",
				},
			],
			stateMutability: "view",
			type: "function",
		},
		{
			inputs: [
				{
					internalType: "uint256",
					name: "_amount",
					type: "uint256",
				},
				{
					internalType: "uint32",
					name: "_startAt",
					type: "uint32",
				},
				{
					internalType: "uint32",
					name: "_endAt",
					type: "uint32",
				},
				{
					internalType: "string",
					name: "_symbol",
					type: "string",
				},
				{
					internalType: "uint256",
					name: "_prediction",
					type: "uint256",
				},
			],
			name: "launch",
			outputs: [],
			stateMutability: "payable",
			type: "function",
		},
	],
	bytecode: "0x608060405234801561001057600080fd5b50610bc6806100206000396000f3fe6080604052600436106100555760003560e01c806306661abd1461005a57806319b05f491461008357806322af00fa14610098578063379607f5146100cc57806340e58ee5146100df578063b20e40d6146100f2575b600080fd5b34801561006657600080fd5b5061007060005481565b6040519081526020015b60405180910390f35b610096610091366004610959565b610105565b005b3480156100a457600080fd5b506100b86100b3366004610959565b610212565b60405161007a989796959493929190610972565b6100966100da366004610959565b6102ff565b6100966100ed366004610959565b6103c9565b610096610100366004610a4c565b6105cc565b6000818152600160205260409020600281015434101561012457600080fd5b600381015463ffffffff164210156101715760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b60448201526064015b60405180910390fd5b6003810154640100000000900463ffffffff164211156101bb5760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b6044820152606401610168565b80546001600160a01b031633036101fc5760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b6044820152606401610168565b60010180546001600160a01b0319163317905550565b6001602081905260009182526040909120805491810154600282015460038301546004840180546001600160a01b039687169690941694929363ffffffff80841694640100000000850490911693600160401b900460ff1692909161027690610b30565b80601f01602080910402602001604051908101604052809291908181526020018280546102a290610b30565b80156102ef5780601f106102c4576101008083540402835291602001916102ef565b820191906000526020600020905b8154815290600101906020018083116102d257829003601f168201915b5050505050908060050154905088565b60008181526001602052604090206003810154640100000000900463ffffffff16421161035a5760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b6044820152606401610168565b6003810154600160401b900460ff16156103a05760405162461bcd60e51b815260206004820152600760248201526618db185a5b595960ca1b6044820152606401610168565b60038101805460ff60401b1916600160401b17905560028101546103c59033906107e4565b5050565b600081815260016020818152604080842081516101008101835281546001600160a01b0390811682529482015490941692840192909252600282015490830152600381015463ffffffff80821660608501526401000000008204166080840152600160401b900460ff16151560a083015260048101805460c08401919061044f90610b30565b80601f016020809104026020016040519081016040528092919081815260200182805461047b90610b30565b80156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b50505091835250506005919091015460209091015280519091506001600160a01b031633146105275760405162461bcd60e51b815260206004820152600b60248201526a3737ba1031b932b0ba37b960a91b6044820152606401610168565b806060015163ffffffff16421061056a5760405162461bcd60e51b81526020600482015260076024820152661cdd185c9d195960ca1b6044820152606401610168565b6000828152600160208190526040822080546001600160a01b0319908116825591810180549092169091556002810182905560038101805468ffffffffffffffffff19169055906105be6004830182610883565b600582016000905550505050565b8434146105d857600080fd5b428463ffffffff16101561061f5760405162461bcd60e51b815260206004820152600e60248201526d7374617274206174203c206e6f7760901b6044820152606401610168565b8363ffffffff168363ffffffff16101561066f5760405162461bcd60e51b8152602060048201526011602482015270195b9908185d080f081cdd185c9d08185d607a1b6044820152606401610168565b61067c426276a700610b6a565b8363ffffffff1611156106c95760405162461bcd60e51b815260206004820152601560248201527432b7321030ba101f1036b0bc10323ab930ba34b7b760591b6044820152606401610168565b60016000808282546106db9190610b6a565b90915550506040805161010081018252338152600060208083018281528385018a815263ffffffff8a8116606087019081528a82166080880190815260a0880187815260c089018c815260e08a018c90528854895260018089529a909820895181546001600160a01b03199081166001600160a01b0392831617835597519b820180549098169b169a909a1790955592516002890155516003880180549351945191831667ffffffffffffffff199094169390931764010000000094909216939093021760ff60401b1916600160401b92151592909202919091179055905180519293926107cf92600485019201906108c0565b5060e082015181600501559050505050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b505090508061087e5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610168565b505050565b50805461088f90610b30565b6000825580601f1061089f575050565b601f0160209004906000526020600020908101906108bd9190610944565b50565b8280546108cc90610b30565b90600052602060002090601f0160209004810192826108ee5760008555610934565b82601f1061090757805160ff1916838001178555610934565b82800160010185558215610934579182015b82811115610934578251825591602001919060010190610919565b50610940929150610944565b5090565b5b808211156109405760008155600101610945565b60006020828403121561096b57600080fd5b5035919050565b6001600160a01b03898116825288166020808301919091526040820188905263ffffffff87811660608401528616608083015284151560a083015261010060c0830181905284519083018190526000918291905b818310156109e5578683018101518584016101200152918201916109c6565b50808211156109f957600061012082860101525b60e08401949094525050601f91909101601f19160161012001979650505050505050565b803563ffffffff81168114610a3157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a08688031215610a6457600080fd5b85359450610a7460208701610a1d565b9350610a8260408701610a1d565b9250606086013567ffffffffffffffff80821115610a9f57600080fd5b818801915088601f830112610ab357600080fd5b813581811115610ac557610ac5610a36565b604051601f8201601f19908116603f01168101908382118183101715610aed57610aed610a36565b816040528281528b6020848701011115610b0657600080fd5b82602086016020830137600092810160200192909252509699959850939660800135949350505050565b600181811c90821680610b4457607f821691505b602082108103610b6457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610b8b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220966de6e2ee46f19867a61054600a9a8f6f7c298207387559764eac10fc8f719764736f6c634300080d0033",
	compilerVersion: "0.8.13+commit.abaa5c0e",
	signerWallet: "0x35105801fc0bE99FD1A2Dd661A7B3d91b5a58541"
}).then((response) => {
	console.log(response.data);
}).catch((error) => {
	console.log(error.response.data.message)
});
